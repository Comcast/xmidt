apiVersion: v1
data:
  talaria.yaml: |
    fqdn: talaria
    env: test
    scheme: http

    primary:
      address: ":6200"
    health:
      address: ":6201"
    pprof:
      address: ":6202"
    control:
      address: ":6203"
    metric:
      address: ":6204"
      metricsOptions:
        namespace: "xmidt"
        subsystem: "talaria"

    log:
      file: "stdout"
      level: "debug"
      json: false

    device:
      manager:
        upgrader:
          handshakeTimeout: "10s"
        maxDevices: 2000
        deviceMessageQueueSize: 100
        pingPeriod: "45s"
        idlePeriod: "135s"
        requestTimeout: "15s"
      outbound:
        method: "POST"
        eventEndpoints:
          default: http://caduceus:6000/api/v3/notify
        requestTimeout: "125s"
        defaultScheme: "http"
        allowedSchemes:
          - "http"
          - "https"
        outboundQueueSize: 1000
        workerPoolSize: 100
        transport:
          maxIdleConns: 0
          maxIdleConnsPerHost: 100
          idleConnTimeout: "120s"
        clientTimeout: "160s"
        authKey: dXNlcjpwYXNz
    inbound:
      authKey: dXNlcjpwYXNz

    eventMap:
      default: http://caduceus:6000/api/v3/notify

    service:
      defaultScheme: http
      consul:
        client:
          address: "{{ .Release.Name }}-consul:8500"
          scheme: "http"
          waitTime: "30s"
        disableGenerateID: true
        vnodeCount: 211
        watches:
          -
            service: "talaria"
            tags:
              - "dev"
              - "docker"
            passingOnly: true
          -
            service: "caduceus"
            tags:
              - "dev"
              - "docker"
            passingOnly: true
        registrations:
          -
            id: "talaria"
            name: "talaria"
            tags:
              - "dev"
              - "docker"
              - "stage=dev"
              - "flavor=docker"
            address: "http://talaria"
            scheme: "http"
            port: 6200
            checks:
              -
                checkID: "talaria:http"
                http: "http://talaria:6201/health"
                interval: "30s"
                deregisterCriticalServiceAfter: "70s"
kind: ConfigMap
metadata:
  labels:
    app: xmidt-app
  name: talaria-config
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    component: talaria
    release: talaria
  name: talaria
spec:
  clusterIP: None
  ports:
    - name: http0
      port: 6200
      protocol: TCP
    - name: http1
      port: 6201
      protocol: TCP
    - name: http2
      port: 6202
      protocol: TCP
    - name: http3
      port: 6203
      protocol: TCP
    - name: http4
      port: 6204
      protocol: TCP
  selector:
    app: xmidt-app-talaria
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: talaria
  labels:
    app: xmidt-app-talaria
spec:
  selector:
    matchLabels:
      app: xmidt-app-talaria
  updateStrategy:
    type: RollingUpdate
  replicas: 1
  serviceName: xmidt-app-talaria
  template:
    metadata:
      labels:
        app: xmidt-app-talaria
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - xmidt-app-talaria
      volumes:
        - name: talaria-config
          projected:
            sources:
              - configMap:
                  name: talaria-config
                  items:
                    - key: talaria.yaml
                      path: talaria.yaml
                      mode: 0755
      securityContext:
        runAsNonRoot: false
        runAsUser: 999
        supplementalGroups: [999]
      containers:
        - image: {{ .Values.talaria.image }}
          name: talaria
          ports:
            - containerPort: 6200
              protocol: TCP
            - containerPort: 6201
              protocol: TCP
            - containerPort: 6202
              protocol: TCP
            - containerPort: 6203
              protocol: TCP
            - containerPort: 6204
              protocol: TCP
          volumeMounts:
            - name: talaria-config
              mountPath: "/etc/talaria"
              readOnly: true
